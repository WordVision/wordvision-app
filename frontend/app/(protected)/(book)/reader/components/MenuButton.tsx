import { useEffect, useRef } from "react";
import { Pressable, Animated } from "react-native";

import {Svg, Path} from "react-native-svg";

interface MenuButtonProps {
  show: boolean
}

export default function MenuButton(p: MenuButtonProps) {

  const slideAnim = useRef(new Animated.Value(100)).current; // header starts above screen

  useEffect(() => {
    if (p.show) {
      Animated.timing(slideAnim, {
        toValue: 0,
        duration: 300,
        useNativeDriver: true,
      }).start();
    }
    else {
      Animated.timing(slideAnim, {
        toValue: 100,
        duration: 300,
        useNativeDriver: true,
      }).start();
    }
  }, [p.show])

  return (
    <Animated.View
      style={{
        position: 'absolute',
        bottom: 32,
        right: 16,
        transform: [{ translateY: slideAnim }],
        zIndex: 1,
      }}
    >
      <Pressable
        style={({pressed}) => ({
          opacity: pressed ? 0.85 : 1,
          backgroundColor: "#375DFB",
          justifyContent: 'center',
          alignItems: 'center',
          padding: 10,
          borderRadius: 100
        })}
      >
        <MenuIcon />
      </Pressable>
    </Animated.View>

  )
}

function MenuIcon() {
  return (
    <Svg width="20" height="20" viewBox="0 0 20 20" fill="black">
      <Path d="M6.25 9.625C5.80679 9.625 5.36792 9.5377 4.95844 9.36809C4.54897 9.19848 4.17691 8.94988 3.86351 8.63649C3.55012 8.32309 3.30152 7.95103 3.13191 7.54156C2.9623 7.13208 2.875 6.69321 2.875 6.25C2.875 5.80679 2.9623 5.36792 3.13191 4.95844C3.30152 4.54897 3.55012 4.17691 3.86351 3.86351C4.17691 3.55012 4.54897 3.30152 4.95844 3.13191C5.36792 2.9623 5.80679 2.875 6.25 2.875C7.14511 2.875 8.00355 3.23058 8.63649 3.86351C9.26942 4.49645 9.625 5.35489 9.625 6.25C9.625 7.14511 9.26942 8.00355 8.63649 8.63649C8.00355 9.26942 7.14511 9.625 6.25 9.625ZM6.25 17.125C5.35489 17.125 4.49645 16.7694 3.86351 16.1365C3.23058 15.5035 2.875 14.6451 2.875 13.75C2.875 12.8549 3.23058 11.9965 3.86351 11.3635C4.49645 10.7306 5.35489 10.375 6.25 10.375C7.14511 10.375 8.00355 10.7306 8.63649 11.3635C9.26942 11.9965 9.625 12.8549 9.625 13.75C9.625 14.6451 9.26942 15.5035 8.63649 16.1365C8.00355 16.7694 7.14511 17.125 6.25 17.125ZM13.75 9.625C13.3068 9.625 12.8679 9.5377 12.4584 9.36809C12.049 9.19848 11.6769 8.94988 11.3635 8.63649C11.0501 8.32309 10.8015 7.95103 10.6319 7.54156C10.4623 7.13208 10.375 6.69321 10.375 6.25C10.375 5.80679 10.4623 5.36792 10.6319 4.95844C10.8015 4.54897 11.0501 4.17691 11.3635 3.86351C11.6769 3.55012 12.049 3.30152 12.4584 3.13191C12.8679 2.9623 13.3068 2.875 13.75 2.875C14.6451 2.875 15.5035 3.23058 16.1365 3.86351C16.7694 4.49645 17.125 5.35489 17.125 6.25C17.125 7.14511 16.7694 8.00355 16.1365 8.63649C15.5035 9.26942 14.6451 9.625 13.75 9.625ZM13.75 17.125C12.8549 17.125 11.9965 16.7694 11.3635 16.1365C10.7306 15.5035 10.375 14.6451 10.375 13.75C10.375 12.8549 10.7306 11.9965 11.3635 11.3635C11.9965 10.7306 12.8549 10.375 13.75 10.375C14.6451 10.375 15.5035 10.7306 16.1365 11.3635C16.7694 11.9965 17.125 12.8549 17.125 13.75C17.125 14.6451 16.7694 15.5035 16.1365 16.1365C15.5035 16.7694 14.6451 17.125 13.75 17.125Z" fill="#EBF1FF"/>
    </Svg>
  )
}

